@startuml
participant map
participant style
participant painter
participant layer
participant source_cache
participant GPU
actor user

map->>style: update(transform)
style->>layer: recalculate()
layer->>layer: recompute\npaint\nproperties
map->source_cache: update(transform)
source_cache->source_cache: fetch new tiles
map->painter: render(style)
painter->source_cache: prepare(context)
loop for each tile
source_cache->GPU: upload vertices
source_cache->GPU: upload image textures
end
loop for each layer
painter->layer: renderLayer(pass=offscreen)
painter->layer: renderLayer(pass=opaque)
painter->layer: renderLayer(pass=translucent)
painter->layer: renderLayer(pass=debug)
loop renderLayer() call for each tile
layer->GPU: load program
layer->GPU: drawElements()
GPU->user: display pixels
end
end
map->map: triggerRepaint()
@enduml
